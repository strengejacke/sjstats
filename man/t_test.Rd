% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_test.R
\name{t_test}
\alias{t_test}
\title{Student's t test}
\usage{
t_test(
  data,
  select = NULL,
  by = NULL,
  weights = NULL,
  paired = FALSE,
  mu = 0,
  alternative = "two.sided"
)
}
\arguments{
\item{data}{A data frame.}

\item{select}{One or more name of the continuous variable (as character
vector) to be used as samples for the test. If \code{select} only specified one
variable, a one-sample test is carried out (only applicable for \code{t_test()}).
Else, \code{by} must be provided to indicate the groups of comparison.}

\item{by}{Name of the variable indicating the groups. Required if \code{select}
specifies only one variable that contains all samples to be compared in the
test. If \code{by} is not a factor, it will be coerced to a factor. For
\code{chi_squared_test()}, if \code{probabilities} is provided, \code{by} must be \code{NULL}.}

\item{weights}{Name of an (optional) weighting variable to be used for the test.}

\item{paired}{Logical, whether to compute a paired t-test.}

\item{mu}{The hypothesized difference in means. If \code{paired = TRUE}, or for a
one-sample t-test, this is the hypothesized true mean value. If
\code{paired = FALSE}, this is the hypothesized difference in means between the
two groups.}

\item{alternative}{A character string specifying the alternative hypothesis,
must be one of \code{"two.sided"} (default), \code{"greater"} or \code{"less"}. See \code{?t.test()}.}
}
\value{
A data frame with test results.
}
\description{
This function performs a Student's t test for two independent
samples, for paired samples, or for one sample.
}
\examples{
data(efc)
# Mann-Whitney-U-Tests for elder's age by elder's sex.
t_test(efc, "e17age", by = "e16sex")

# when data is in wide-format, specify all relevant continuous
# variables in `select` and omit `by`
set.seed(123)
wide_data <- data.frame(scale1 = runif(20), scale2 = runif(20))
t_test(wide_data, select = c("scale1", "scale2"))

# same as if we had data in long format, with grouping variable
long_data <- data.frame(
  scales = c(wide_data$scale1, wide_data$scale2),
  groups = rep(c("A", "B"), each = 20)
)
t_test(long_data, select = "scales", by = "groups")
}
