% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kruskal_wallis_test.R
\name{kruskal_wallis_test}
\alias{kruskal_wallis_test}
\title{Kruskal-Wallis test}
\usage{
kruskal_wallis_test(data, select = NULL, by = NULL, weights = NULL)
}
\arguments{
\item{data}{A data frame.}

\item{select}{Name of the dependent variable (as string) to be used for the
test. \code{select} can also be a character vector, specifing the names of
multiple continuous variables. In this case, \code{by} is ignored and variables
specified in \code{select} are used to compute the test. This can be useful if
the data is in wide-format and no grouping variable is available.}

\item{by}{Name of the grouping variable to be used for the test. If \code{by} is
not a factor, it will be coerced to a factor. For \code{chi_squared_test()}, if
\code{probabilities} is provided, \code{by} must be \code{NULL}.}

\item{weights}{Name of an (optional) weighting variable to be used for the test.}
}
\value{
A data frame with test results.
}
\description{
This function performs a Kruskal-Wallis rank sum test, to test
the null hypothesis that the population median of all of the groups are
equal. The alternative is that they differ in at least one.
}
\details{
The function simply is a wrapper around \code{\link[=kruskal.test]{kruskal.test()}}. The
weighted version of the Kruskal-Wallis test is based on the \strong{survey} package,
using \code{\link[survey:svyranktest]{survey::svyranktest()}}.
}
\examples{
data(efc)
# Kruskal-Wallis test for elder's age by education
kruskal_wallis_test(efc, "e17age", by = "c172code")

# when data is in wide-format, specify all relevant continuous
# variables in `select` and omit `by`
set.seed(123)
wide_data <- data.frame(
  scale1 = runif(20),
  scale2 = runif(20),
  scale3 = runif(20)
)
kruskal_wallis_test(wide_data, select = c("scale1", "scale2", "scale3"))

# same as if we had data in long format, with grouping variable
long_data <- data.frame(
  scales = c(wide_data$scale1, wide_data$scale2, wide_data$scale3),
  groups = rep(c("A", "B", "C"), each = 20)
)
kruskal_wallis_test(long_data, select = "scales", by = "groups")
}
